{"version":3,"sources":["components/Profile/User.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/Friends/Friends.module.css","components/Profile/default.svg","components/Profile/User.js","components/Profile/UsersList.js","components/Friends/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","User","props","className","styles","friend_profile","friend_description","src","avatar","alt","friend_avatar","friend_name","name","friend_tag","tag","friend_location","location","stats","item","friend_label","friend_quantity","followers","views","likes","defaultProps","defaultImg","UsersList","users","FriendList","friends","friendList","map","friend","isOnline","status","status__offline","width","id","TransactionHistory","items","transaction_history","transaction_head","transaction_title","transaction_item","type","amount","currency","Statistics","title","statistics","stat_list","statistic","style","backgroundColor","getRandom","label","percentage","min","max","Math","ceil","random","App","transactions","statisticsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef3929d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_profile\":\"User_friend_profile__1r_5d\",\"friend_description\":\"User_friend_description__3boGC\",\"friend_avatar\":\"User_friend_avatar__1VxLf\",\"friend_name\":\"User_friend_name__jnJjA\",\"friend_tag\":\"User_friend_tag__1FWK3\",\"friend_location\":\"User_friend_location__9s03p\",\"stats\":\"User_stats__2fZDi\",\"item\":\"User_item__14-x7\",\"friend_label\":\"User_friend_label__3V5If\",\"friend_quantity\":\"User_friend_quantity__2ZEFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2Hpni\",\"transaction_head\":\"TransactionHistory_transaction_head__39b99\",\"transaction_title\":\"TransactionHistory_transaction_title__37Zl6\",\"transaction_item\":\"TransactionHistory_transaction_item__2rPgz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__3EjZ8\",\"stat_list\":\"Statistics_stat_list__2eTIj\",\"statistics\":\"Statistics_statistics__3EU4R\",\"title\":\"Statistics_title__3RsGW\",\"label\":\"Statistics_label__5v_WF\",\"percentage\":\"Statistics_percentage__3-Ktz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friends_friendList__2cKMp\",\"item\":\"Friends_item__BTL4y\",\"status\":\"Friends_status__3s3jC\",\"status__offline\":\"Friends_status__offline__1KiD0 Friends_status__3s3jC\"};","export default __webpack_public_path__ + \"static/media/default.f8b384b5.svg\";","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './User.module.css';\r\nimport defaultImg from './default.svg';\r\n\r\n  \r\nconst User = (props) => { \r\n   return (\r\n    <div className={styles.friend_profile}>\r\n    <div className={styles.friend_description}>\r\n      <img src={props.avatar}\r\n      alt=\"Аватар пользователя\" \r\n      className={styles.friend_avatar} \r\n      />\r\n\r\n      <p className={styles.friend_name}>{props.name}</p>\r\n      <p className={styles.friend_tag}>{props.tag}</p>\r\n      <p className={styles.friend_location}>{props.location}</p>\r\n    </div>\r\n  \r\n    <ul className={styles.stats}>\r\n      <li className={styles.item}>\r\n        <span className={styles.friend_label}>followers</span>\r\n        <span className={styles.friend_quantity}>{props.followers}</span>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <span className={styles.friend_label}>Views</span>\r\n        <span className={styles.friend_quantity}>{props.views}</span>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <span className={styles.friend_label}>Likes</span>\r\n        <span className={styles.friend_quantity}>{props.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n    );\r\n    \r\n  };\r\n  User.defaultProps = {\r\n    avatar: defaultImg,\r\n  };\r\n    User.propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        tag: PropTypes.string.isRequired,\r\n        location: PropTypes.string.isRequired,\r\n        followers: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n      };\r\n\r\n\r\nexport default User;","import React from 'react';\r\nimport User from './User';\r\n\r\nconst UsersList= ({ users }) => {\r\nreturn (\r\n   <div key={users.name}>\r\n     <User \r\n     name={users.name}\r\n     tag={users.tag}\r\n     location={users.location}\r\n     followers={users.stats.followers}\r\n     views={users.stats.views}\r\n     likes={users.stats.likes}\r\n     />\r\n   </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default UsersList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Friends.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul className={styles.friendList}>\r\n        {friends.map(friend => (\r\n            <li className={styles.item} key={friend.id}>\r\n                {friend.isOnline ? (\r\n                    <span className={styles.status}></span>\r\n                ) : (\r\n                    <span className={styles.status__offline}></span>   \r\n                )}                \r\n                <img className=\"avatar\" src={friend.avatar} alt={friend.name} width=\"48\" />\r\n                <p className=\"name\">{friend.name}</p>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n    })).isRequired,\r\n};\r\n\r\nexport default FriendList;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({items}) => { \r\n    return (\r\n      <table className={styles.transaction_history}>\r\n      <thead className={styles.transaction_head}>\r\n      <tr>\r\n        <th className={styles.transaction_title}>Type</th>\r\n        <th className={styles.transaction_title}>Amount</th>\r\n        <th className={styles.transaction_title}>Currency</th>\r\n      </tr>\r\n        </thead>\r\n      \r\n        <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td className={styles.transaction_item}>{item.type}</td>\r\n          <td className={styles.transaction_item}>{item.amount}</td>\r\n          <td className={styles.transaction_item}>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n\r\n     );\r\n     \r\n   };\r\n   TransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n  };\r\n \r\n export default TransactionHistory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ stats, title }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.stat_list}>\r\n      {stats.map(statistic => (\r\n        <li\r\n          className={styles.item}\r\n          style={{ backgroundColor: `rgb(${getRandom(0, 255)}, ${getRandom(0, 255)}, ${getRandom(0, 255)})` }}\r\n          key={statistic.id}\r\n        >\r\n          <span className={styles.label}>{statistic.label}</span>\r\n          <span className={styles.percentage}>{statistic.percentage + '%'}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\nfunction getRandom(min, max){\r\n  return Math.ceil(Math.random() * (max - min) + min)\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\nimport users from './users.json';\nimport UsersList from './components/Profile/UsersList';\nimport friends from './friends.json';\nimport FriendList from './components/Friends/FriendList';\nimport transactions from './transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport statisticsData from './statistical-data.json';\nimport Statistics from './components/Statistics/Statistics';\n\n\nconst App = () => {\n  return (\n   <div>\n     {/* <h1>Главный компонент-контейнер</h1> */}\n     <UsersList users={users} />\n     <FriendList friends={friends} />\n     <TransactionHistory items={transactions} />\n     <Statistics title=\"Upload stats\" stats={statisticsData} />\n\n   </div>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}